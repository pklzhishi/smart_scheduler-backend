<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.smart_schedulerbackend.mapper.UserMapper">
    <resultMap id="UserResultMap" type="org.example.smart_schedulerbackend.model.entity.User">
        <id property="id" column="id"/>
        <result property="username" column="username"/>
        <result property="password" column="password"/>
        <result property="nickName" column="nick_name"/>
        <result property="avatarUrl" column="avatar_url"/>
        <result property="phone" column="phone"/>
        <result property="email" column="email"/>
        <result property="status" column="status"/>
        <result property="isDeleted" column="is_deleted"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="identity" column="identity"/>
        <result property="telephoneNumber" column="telephone_number"/>
        <result property="className" column="class"/>
    </resultMap>

    <insert id="insertUser" parameterType="org.example.smart_schedulerbackend.model.entity.User">
        INSERT INTO user(id,username,password,nick_name,avatar_url,phone,email,status,is_deleted,create_time,update_time,identity,telephone_number,class)
        VALUES (#{id},#{username},#{password},#{nickName},#{avatarUrl},#{phone},#{email},#{status},#{isDeleted},#{createTime},#{updateTime},#{identity},#{telephoneNumber},#{className})
    </insert>

    <select id="getUserById" parameterType="String" resultMap="UserResultMap">
        SELECT * FROM user WHERE id = #{value} OR telephone_number = #{value}
    </select>

    <update id="updateUser" parameterType="org.example.smart_schedulerbackend.model.entity.User">
        UPDATE user
        SET username = #{username},
            password = #{password},
            nick_name = #{nickName},
            avatar_url= #{avatarUrl},
            phone = #{phone},
            email = #{email},
            status = #{status},
            is_deleted = #{isDeleted},
            create_time=  #{createTime},
            update_time = #{updateTime},
            identity = #{identity},
            telephone_number = #{telephoneNumber},
            class = #{className}
        WHERE id = #{id}
    </update>

    <delete id="deleteUser" parameterType="String">
        DELETE FROM user WHERE id = #{id}
    </delete>

    <select id="informationValidationForStudent" parameterType="String">
        SELECT COUNT(*) AS count,class_name FROM student WHERE id = #{value} GROUP BY class_name
    </select>

    <select id="informationValidationForTeacher" parameterType="String">
        SELECT COUNT(*) AS count FROM teacher_information WHERE Teacher_number = #{value}
    </select>

    <select id="getClassByStudent" parameterType="String">
        SELECT class_name,school_district FROM student WHERE id = #{value}
    </select>

    <select id="onlyTelephoneNumber" parameterType="String">
        SELECT * FROM user WHERE telephone_number = #{value}
    </select>

</mapper>